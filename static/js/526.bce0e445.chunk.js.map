{"version":3,"file":"static/js/526.bce0e445.chunk.js","mappings":"sNAEaA,EAAOC,EAAAA,GAAAA,GAAH,sEAKJC,EAAOD,EAAAA,GAAAA,GAAH,6G,SCHJE,EAAY,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACpBC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,0BACE,SAACN,EAAD,UACGI,EAAOG,KAAI,SAAAC,GAAK,OACf,SAACN,EAAD,WACE,SAAC,KAAD,CAAMO,GAAE,kBAAaD,EAAME,IAAMC,MAAO,CAAEC,KAAMP,GAAhD,SACGG,EAAMK,SAFAL,EAAME,GADF,OAUxB,C,iKClBYI,E,QAAQb,GAAAA,GAAH,kG,SC4BlB,EAtBa,WACX,OAA4Bc,EAAAA,EAAAA,UAAS,IAArC,eAAOX,EAAP,KAAeY,EAAf,KAcA,OAZAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,8GAEyBC,EAAAA,EAAAA,MAFzB,OAEUd,EAFV,OAGIY,EAAUZ,GAHd,iDAKIe,EAAAA,EAAAA,IAAM,KAAMC,SALhB,0DADc,uBAAC,WAAD,wBASdC,EACD,GAAE,KAGD,6BACE,SAACP,EAAD,8BACA,SAACX,EAAA,EAAD,CAAWC,OAAQA,MAGxB,C,kMC1BKkB,EAAU,mCAIT,SAAeJ,IAAtB,4CAAO,OAAP,oBAAO,6GAEoBK,EAAAA,EAAAA,IAAA,sCAAyCD,IAF7D,UAGkC,KAD/BE,EAFH,QAGUC,KAAKC,QAAQC,OAHvB,sBAIKC,MAAM,kDAJX,gCAMIJ,EAASC,KAAKC,SANlB,oCAQC,KAAMG,UAAW,KAAML,SARxB,uBASKI,MAAM,kDATX,mGAiBA,SAAeE,EAAtB,+CAAO,OAAP,oBAAO,WAA+BC,GAA/B,gGAEoBR,EAAAA,EAAAA,IAAA,gCAAmCD,EAAnC,kBAAoDS,EAApD,yBAFpB,WAEGP,EAFH,QAGWC,KAAKC,QAAQC,OAHxB,sBAIKC,MAAM,iDAJX,gCAMIJ,EAASC,KAAKC,SANlB,sCAQC,KAAMG,UAAW,KAAML,SARxB,uBASKI,MAAM,kDATX,oGAiBA,SAAeI,EAAtB,+CAAO,OAAP,oBAAO,WAA+BC,GAA/B,gGAEoBV,EAAAA,EAAAA,IAAA,iBAAoBU,EAApB,4BAA+CX,IAFnE,WAEGE,EAFH,QAGWC,KAAKS,KAAKP,OAHrB,sBAIKC,MAAM,gDAJX,gCAMIJ,EAASC,KAAKS,MANlB,sCAQC,KAAML,UAAW,KAAML,SARxB,uBASKI,MAAM,kDATX,oGAkBC,SAAeO,EAAtB,+CAAO,OAAP,oBAAO,WAA+BF,GAA/B,gGAEmBV,EAAAA,EAAAA,IAAA,iBAAoBU,EAApB,oBAAuCX,IAF1D,UAGyB,KADvBE,EAFF,QAGSC,KAAKE,OAHd,sBAIIC,MAAM,iDAJV,gCAMGJ,EAASC,MANZ,sCAQA,KAAMI,UAAW,KAAML,SARvB,uBASII,MAAM,kDATV,oGAiBD,SAAeQ,EAAtB,+CAAO,OAAP,oBAAO,WAA+BH,GAA/B,gGAEoBV,EAAAA,EAAAA,IAAA,iBAAoBU,EAApB,4BAA+CX,IAFnE,WAEGE,EAFH,QAGWC,KAAKC,QAAQC,OAHxB,sBAIKC,MAAM,kDAJX,gCAMIJ,EAASC,KAAKC,SANlB,sCAQC,KAAMG,UAAW,KAAML,SARxB,uBASKI,MAAM,kDATX,oGAvEPL,EAAAA,EAAAA,SAAAA,QAHiB,8B","sources":["components/MovieList/MovieList.styled.js","components/MovieList/MovieList.js","pages/Home/Home.styled.js","pages/Home/Home.js","servises/movieApi.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const List = styled.ul`\n  padding-left: 100px;\n  padding-top: 20px;\n`;\n\nexport const Item = styled.li`\n  padding-bottom: 10px;\n   :hover {\n    color: teal;\n    font-weight: bold;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { Link, useLocation } from 'react-router-dom';\nimport { Item, List } from './MovieList.styled';\n\nexport const MovieList = ({ movies }) => {\n  const location = useLocation();\n  \n  return (\n    <div>\n      <List>\n        {movies.map(movie => (\n          <Item key={movie.id}>\n            <Link to={`/movies/${movie.id}`} state={{ from: location }}>\n              {movie.title}\n            </Link>\n          </Item>\n        ))}\n      </List>\n    </div>\n  );\n};\n\nMovieList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n    })\n  ).isRequired,\n};\n","import styled from \"styled-components\";\n\nexport const Title = styled.h1`\n  padding-left: 100px;\n  font-size: 24px;\n  text-transform: uppercase;\n`;\n\n","import { useEffect, useState } from 'react';\nimport { getMoviesTrending } from 'servises/movieApi';\nimport { toast } from 'react-toastify';\n\nimport { MovieList } from '../../components/MovieList/MovieList';\n\nimport { Title } from './Home.styled';\n\nconst Home = () => {\n  const [movies, setMovies] = useState([]);\n\n  useEffect(() => {\n    async function fetchMovies() {\n      try {\n        const movies = await getMoviesTrending();\n        setMovies(movies);\n      } catch (error) {\n        toast(error.message);\n      }\n    }\n    fetchMovies();\n  }, []);\n\n  return (\n    <main>\n      <Title>Trending today</Title>\n      <MovieList movies={movies} />\n    </main>\n  );\n};\nexport default Home;\n","import axios from \"axios\";\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = '53391f0255c4ebe5a2e85a821642826a';\n\naxios.defaults.baseURL = BASE_URL;\n\nexport async function getMoviesTrending(){\n  try {\n    const response = await axios.get(`/trending/movie/day?api_key=${API_KEY}`);\n    if (response.data.results.length === 0) {\n      throw Error('Sorry, but nothing was found for your request!');\n    }\n    return response.data.results;\n  } catch (error) {\n    if (error.request || error.response) {\n      throw Error('Sorry, something went wrong, please try again!');\n    } else {\n      throw error;\n    }\n  }\n};\n\n\nexport async function getMoviesSearch(query) {\n  try {\n    const response = await axios.get(`/search/movie?api_key=${API_KEY}&query=${query}&include_adult=false`);\n    if (!response.data.results.length) {\n      throw Error('Sorry, no movies were found for your request!')\n    };\n    return response.data.results;\n  } catch (error) {\n    if (error.request || error.response) {\n      throw Error('Sorry, something went wrong, please try again!');\n    } else {\n      throw error;\n    }\n  }\n};\n\n\nexport async function getMovieCredits(movieId) {\n  try {\n    const response = await axios.get(`/movie/${movieId}/credits?api_key=${API_KEY}`);\n    if (!response.data.cast.length) {\n      throw Error('Sorry, no casts were found for your request!')\n    };\n    return response.data.cast;\n  } catch (error) {\n    if (error.request || error.response) {\n      throw Error('Sorry, something went wrong, please try again!');\n    } else {\n      throw error;\n    }\n  }\n};\n\n\n\n export async function getMovieDetails(movieId) {\n   try {\n    const response = await axios.get(`/movie/${movieId}?api_key=${API_KEY}`);\n    if (response.data.length === 0) {\n      throw Error('Sorry, no movies were found for your request!')\n    };\n    return response.data;\n  } catch (error) {\n    if (error.request || error.response) {\n      throw Error('Sorry, something went wrong, please try again!');\n    } else {\n      throw error;\n    }\n  }\n};\n\n\nexport async function getMovieReviews(movieId) {\n  try {\n    const response = await axios.get(`/movie/${movieId}/reviews?api_key=${API_KEY}`);\n    if (!response.data.results.length) {\n      throw Error('Sorry, no reviews were found for your request!')\n    };\n    return response.data.results;\n  } catch (error) {\n    if (error.request || error.response) {\n      throw Error('Sorry, something went wrong, please try again!');\n    } else {\n      throw error;\n    }\n  }\n};\n\n\n"],"names":["List","styled","Item","MovieList","movies","location","useLocation","map","movie","to","id","state","from","title","Title","useState","setMovies","useEffect","getMoviesTrending","toast","message","fetchMovies","API_KEY","axios","response","data","results","length","Error","request","getMoviesSearch","query","getMovieCredits","movieId","cast","getMovieDetails","getMovieReviews"],"sourceRoot":""}